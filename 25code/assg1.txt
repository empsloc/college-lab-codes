1)forkk.c  
#include <stdio.h> 
#include <stdlib.h> 
#include <unistd.h> 
#include <sys/wait.h> 
int main() 
{ 
    int w_status; 
    pid_t pid; 
    pid = fork(); 
    if (pid < 0) 
    { 
        fprintf(stderr, "Error forking process\n"); 
        return 1; 
    } 
    else if (pid == 0) 
    { 
        // Child process 
        printf("\nCHILD"); 
        printf("\nChild with pid: %d", getpid()); 
        printf("\nParent pid: %d\n", getppid()); 
        // Grep 
        if (execl("/mnt/d/aa_College labs/OS lab/ass_1/grepp", "grepp", "Vishal", "for_grep.txt", NULL) == -1) 
        { 
            perror("error in execl!"); 
            exit(EXIT_FAILURE); 
        } 
    } 
    else 
    { 
        // Parent process 
        printf("\nPARENT"); 
        printf("\nParent with pid: %d", getpid()); 
        printf("\nParent with child pid: %d\n", pid); 
        // Wait for child to finish 
        wait(&w_status); 
        printf("\nchild Finished"); 
        // Copy 
        if (execl("/mnt/d/aa_College labs/OS lab/ass_1/cpy", "cpy", "for_grep.txt", "for_cp.txt", NULL) == -1) 
        { 
            perror("execl"); 
            exit(EXIT_FAILURE); 
        } 
    } 
    return 0; 
} 
 
 
2)grepp.c 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
int main(int argc, char *argv[]) 
{ 
    char filename[15], target[15], line[100]; 
    FILE *file; 
    int count = 0; 
    // Check if command-line arguments are provided correctly 
    if (argc < 3) 
    { 
        printf("Insufficient Arguments\n"); 
        exit(EXIT_FAILURE); 
    } 
    // Open the file for reading 
    file = fopen(argv[2], "r"); 
    if (file == NULL) 
    { 
        printf("%s not available\n", argv[2]); 
        exit(EXIT_FAILURE); 
    } 
 
    printf("\n!grepp programs output!\n"); 
    // Read file line by line 
    while (fgets(line, sizeof(line), file) != NULL) 
    { 
        // Check if the target string is found in the line 
        if (strstr(line, argv[1]) != NULL) 
        { 
            count++; 
            fputs(line, stdout); // Print the line containing the target string 
        } 
    } 
    // Print total count of occurrences 
    printf("Total Occurance of given word is : %d\n", count); 
    // Close the file 
    fclose(file); 
    return EXIT_SUCCESS; 
} 
 
3)cpy.c 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
int main(int argc, char *argv[]) 
{ 
    FILE *source_file, *destination_file; 
    char buffer[100]; 
    // Check if command-line arguments are provided correctly 
    if (argc < 3) 
    { 
        printf("Insufficient number of parameters\n"); 
        exit(EXIT_FAILURE); 
    } 
    // Open the source file for reading 
    source_file = fopen(argv[1], "r"); 
    if (source_file == NULL) 
    { 
        printf("%s not available\n", argv[1]); 
        exit(EXIT_FAILURE); 
    } 
    // Open the destination file for writing 
    destination_file = fopen(argv[2], "w"); 
    if (destination_file == NULL) 
    { 
        printf("Unable to create %s\n", argv[2]); 
        fclose(source_file); // Close the source file before exiting 
        exit(EXIT_FAILURE); 
    } 
 
        printf("\n!cpy programs output!\n"); 
 
    // Copy content from source file to destination file 
    while (fgets(buffer, sizeof(buffer), source_file) != NULL) 
    { 
        fputs(buffer, destination_file); 
    } 
    // Print success message 
    printf("%s has been copied to %s\n", argv[1], argv[2]); 
    // Close both files 
    fclose(source_file); 
    fclose(destination_file); 
    return EXIT_SUCCESS; 
} 
Output: 
For_grep.txt 
vishal@DESKTOP-1S6GU8I:/mnt/d/aa_College labs/OS lab/ass_1$ cat for_grep.txt 
Name : Vishal Vikas Sandhan 
hello World! 
My name is Vishal 
nice to meet you 
How are you 
jsha  as sdfs sd dsfsf 
 
 
fork.c program output 
 
vishal@DESKTOP-1S6GU8I:/mnt/d/aa_College labs/OS lab/ass_1$ gcc forkk.c 
vishal@DESKTOP-1S6GU8I:/mnt/d/aa_College labs/OS lab/ass_1$ ./a.out 
 
PARENT 
CHILD 
Parent with pid: 162 
Child with pid: 163 
Parent with child pid: 163 
Parent pid: 162 
 
!grepp programs output! 
 
Name : Vishal Vikas Sandhan 
My name is Vishal 
Total Occurance of given word is : 2 
child Finished 
 
!cpy programs output! 
 
for_grep.txt  has been copied to for_cpy.txt 
 
for_cpy.txt 
 
vishal@DESKTOP-1S6GU8I:/mnt/d/aa_College labs/OS lab/ass_1$ cat for_cp.txt 
Name : Vishal Vikas Sandhan 
hello World! 
My name is Vishal 
nice to meet you 
How are you 
jsha  as sdfs sd dsfsf